// You are given two strings s and t.
// String t is generated by random shuffling string s and then add one more letter at a random position.
// Return the letter that was added to t.

// Example 1:
//     Input: s = "abcd", t = "abcde"
//     Output: "e"
//     Explanation: 'e' is the letter that was added.

// Example 2:
//     Input: s = "", t = "y"
//     Output: "y"

// Constraints:
//     0 <= s.length <= 1000
//     t.length == s.length + 1
//     s and t consist of lowercase English letters.

var findTheDifference1 = function(s, t) {
    // method 1 - string replace - longer and more memory
    // go through s and remove each letter from t with '', return last letter left in t at the end
    for(let i = 0; i < s.length; i++){
        const letter = s[i];
        t = t.replace(letter, '');
    }

    return t;
};

function findTheDifference(s, t){
    // method 2 - hashing - faster and less memory (suprisingly)
    // go through t and hash the letter counts
    // go through s and deduct/remove from letter counts
    // get array of keys (should only be 1 left) at end and return the letter at index 0
    const hash = new Map();

    for(let i = 0; i < t.length; i++){
        const letter = t[i];
        const count = hash.get(letter);
        if(count === undefined) hash.set(letter, 1);
        else hash.set(letter, count + 1);
    }

    for(let j = 0; j < s.length; j++){
        const letter = s[j];
        const count = hash.get(letter);
        if(count === 1) hash.delete(letter);
        else hash.set(letter, count - 1);
    }

    // sped up by iterating directly over key/value pairs in hash rather than Array.from(hash.keys())
    for(const [key, value] of hash){
        return key;
    }
}
